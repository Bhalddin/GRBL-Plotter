<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cbPort.ToolTip" xml:space="preserve">
    <value>Seleziona la porta seriale libera</value>
  </data>
  <data name="cbBaud.ToolTip" xml:space="preserve">
    <value>Seleziona la velocità</value>
  </data>
  <data name="BtnOpenPortSerial.Text" xml:space="preserve">
    <value>Aprire</value>
  </data>
  <data name="BtnOpenPortSerial.ToolTip" xml:space="preserve">
    <value>Apri la porta COM selezionata con la velocità selezionata</value>
  </data>
  <data name="btnScanPort.Text" xml:space="preserve">
    <value>Scansione porte</value>
  </data>
  <data name="btnScanPort.ToolTip" xml:space="preserve">
    <value>Cerca le porte libere</value>
  </data>
  <data name="pasteCodeFromClipboardToolStripMenuItem.Text" xml:space="preserve">
    <value>Incolla il codice dagli appunti</value>
  </data>
  <data name="copySelectionToClipboardToolStripMenuItem.Text" xml:space="preserve">
    <value>Copia la selezione negli appunti</value>
  </data>
  <data name="selectAllToolStripMenuItem.Text" xml:space="preserve">
    <value>Seleziona tutto</value>
  </data>
  <data name="btnClear.Text" xml:space="preserve">
    <value>Pulisci il registro</value>
  </data>
  <data name="btnClear.ToolTip" xml:space="preserve">
    <value>Cancella l'elenco sopra</value>
  </data>
  <data name="btnSend.Text" xml:space="preserve">
    <value>Inviare</value>
  </data>
  <data name="btnSend.ToolTip" xml:space="preserve">
    <value>Premere per inviare il comando</value>
  </data>
  <data name="btnGRBLCommand0.ToolTip" xml:space="preserve">
    <value>Aiuto: ottieni l'elenco di tutti i comandi GRBL</value>
  </data>
  <data name="btnGRBLCommand1.ToolTip" xml:space="preserve">
    <value>Visualizza le impostazioni di Grbl</value>
  </data>
  <data name="btnGRBLCommand2.ToolTip" xml:space="preserve">
    <value>Visualizza i parametri del codice G</value>
  </data>
  <data name="btnGRBLCommand3.ToolTip" xml:space="preserve">
    <value>Visualizza i blocchi di avvio</value>
  </data>
  <data name="btnGRBLCommand4.ToolTip" xml:space="preserve">
    <value>Uccidi il blocco dell'allarme</value>
  </data>
  <data name="lblSrPos.ToolTip" xml:space="preserve">
    <value>Posizione di lavoro</value>
  </data>
  <data name="label2.ToolTip" xml:space="preserve">
    <value>Stato del buffer (deve essere abilitato tramite $ 10=2)</value>
  </data>
  <data name="lblSrBf.ToolTip" xml:space="preserve">
    <value>Stato del buffer (deve essere abilitato tramite $ 10=2)</value>
  </data>
  <data name="label4.ToolTip" xml:space="preserve">
    <value>Avanzamento corrente (mm/min) e velocità (RPM)</value>
  </data>
  <data name="lblSrFS.ToolTip" xml:space="preserve">
    <value>Avanzamento corrente (mm/min) e velocità (RPM)</value>
  </data>
  <data name="lblSrPn.ToolTip" xml:space="preserve">
    <value>Stato pin di ingresso per XYZ, sonda, porta, attesa, ripristino graduale, avvio ciclo</value>
  </data>
  <data name="label7.ToolTip" xml:space="preserve">
    <value>Stato pin di ingresso per XYZ, sonda, porta, attesa, ripristino graduale, avvio ciclo</value>
  </data>
  <data name="lblSrOv.ToolTip" xml:space="preserve">
    <value>Override Valori per avanzamento, rapidi e velocità in %</value>
  </data>
  <data name="label9.ToolTip" xml:space="preserve">
    <value>Override Valori per avanzamento, rapidi e velocità in %</value>
  </data>
  <data name="lblSrA.ToolTip" xml:space="preserve">
    <value>Stato accessorio S=mandrino in senso orario, C=mandrino in senso antiorario, F=liquido a bagnomaria, M=refrigerante a nebbia</value>
  </data>
  <data name="LblAccessoryState.ToolTip" xml:space="preserve">
    <value>Stato accessorio S=mandrino in senso orario, C=mandrino in senso antiorario, F=liquido a bagnomaria, M=refrigerante a nebbia</value>
  </data>
  <data name="lblSrLn.ToolTip" xml:space="preserve">
    <value>Numero di riga (deve essere abilitato in config.h)</value>
  </data>
  <data name="label13.ToolTip" xml:space="preserve">
    <value>Numero di riga (deve essere abilitato in config.h)</value>
  </data>
  <data name="btnCheckGRBL.Text" xml:space="preserve">
    <value>Controlla GRBL</value>
  </data>
  <data name="btnCheckGRBL.ToolTip" xml:space="preserve">
    <value>Controllare l'impostazione GRBL per i limiti massimo e minimo 
Non per GRBL Vers. &lt; 1.0</value>
  </data>
  <data name="btnGRBLReset.Text" xml:space="preserve">
    <value>RIPRISTINA</value>
  </data>
  <data name="btnGRBLReset.ToolTip" xml:space="preserve">
    <value>Soft Reset tramite CTRL-X</value>
  </data>
  <data name="btnGRBLHardReset.Text" xml:space="preserve">
    <value>RST</value>
  </data>
  <data name="btnGRBLHardReset.ToolTip" xml:space="preserve">
    <value>Prova il ripristino forzato tramite DTR / RTS
Il successo dipende dall'hardware utilizzato (DTR, RTS cablato?)</value>
  </data>
  <data name="btnGRBLCmndParser.ToolTip" xml:space="preserve">
    <value>Visualizza lo stato del parser del codice G</value>
  </data>
  <data name="btnGRBLCmndBuild.ToolTip" xml:space="preserve">
    <value>Visualizza le informazioni sulla costruzione</value>
  </data>
  <data name="cBStatus.Text" xml:space="preserve">
    <value>Mostra rapporto di stato in tempo reale</value>
  </data>
  <data name="cBStatus.ToolTip" xml:space="preserve">
    <value>Mostra i rapporti di stato GRBL ricevuti in originale</value>
  </data>
  <data name="cBStatus1.ToolTip" xml:space="preserve">
    <value>Mostra i comandi inviati ed elaborati durante lo streaming</value>
  </data>
  <data name="lblSrState.Text" xml:space="preserve">
    <value>Stato</value>
  </data>
  <data name="cBCommand.Items" xml:space="preserve">
    <value>$H (Homing)</value>
  </data>
  <data name="cBCommand.Items1" xml:space="preserve">
    <value>G90 G1 X1 F500 (assoluto)</value>
  </data>
  <data name="cBCommand.Items2" xml:space="preserve">
    <value>G91 G1 X1 F500 (relativo)</value>
  </data>
  <data name="cBCommand.Items3" xml:space="preserve">
    <value>$ 32=1 (modalità laser attiva)</value>
  </data>
  <data name="cBCommand.Items4" xml:space="preserve">
    <value>$ 32=0 (modalità laser disattivata)</value>
  </data>
  <data name="btnCheckGRBLResult.Text" xml:space="preserve">
    <value>?</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Rapporto sullo stato in tempo reale</value>
  </data>
  <data name="TbEthernetIP.Text" xml:space="preserve">
    <value>192.168.2.122</value>
  </data>
  <data name="LblEthernetPort.Text" xml:space="preserve">
    <value>Porta:</value>
  </data>
  <data name="BtnOpenPortEthernet.Text" xml:space="preserve">
    <value>Collegare</value>
  </data>
</root>